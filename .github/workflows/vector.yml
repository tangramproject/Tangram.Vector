name: Build Vector Node

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Generate build number
      uses: einaregilsson/build-number@v1 
      with:
        token: ${{secrets.github_token}}
    - name: Print new build number
      run: echo Build number is $BUILD_NUMBER
    - name: Setup .NET Core 3.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.200' # SDK Version to use.
    - name: Checkout latest
      uses: actions/checkout@master
    - name: Build Vector
      run:  |
        cd Tangram.Vector
        dotnet restore Tangram.Vector.sln
        dotnet publish TGMNode --output publish/TGMNode --configuration Release
    #- name: Push to Octopus
    #  env:
    #    OCTOPUS_CLI_SERVER: ${{secrets.OCTOPUS_CLI_SERVER}}
    #    OCTOPUS_CLI_API_KEY: ${{secrets.OCTOPUS_CLI_API_KEY}}
    #  run: |
    #    cd VectorContainers
    #    wget https://download.octopusdeploy.com/octopus-tools/6.13.1/OctopusTools.6.13.1.ubuntu.16.04-x64.tar.gz
    #    tar -xvzf OctopusTools.6.13.1.ubuntu.16.04-x64.tar.gz
    #    ./Octo pack --id Tangram.Coin.API --version 2.$BUILD_NUMBER --basePath "publish/Coin.API"
    #    ./Octo push --package=Tangram.Coin.API.2.$BUILD_NUMBER.nupkg
    #    ./Octo pack --id Tangram.MessagePool.API --version 2.$BUILD_NUMBER --basePath "publish/MessagePool.API"
    #    ./Octo push --package=Tangram.MessagePool.API.2.$BUILD_NUMBER.nupkg
    #    ./Octo pack --id Tangram.Onion.API --version 2.$BUILD_NUMBER --basePath "publish/Onion.API"
    #    ./Octo push --package=Tangram.Onion.API.2.$BUILD_NUMBER.nupkg
    #    ./Octo pack --id Tangram.Membership.API --version 2.$BUILD_NUMBER --basePath "publish/Membership.API"
    #    ./Octo push --package=Tangram.Membership.API.2.$BUILD_NUMBER.nupkg
    #    ./Octo pack --id Tangram.Gateway --version 2.$BUILD_NUMBER --basePath "publish/TGMGateway"
    #    ./Octo push --package=Tangram.Gateway.2.$BUILD_NUMBER.nupkg
    - uses: actions/setup-ruby@v1
    - name: Send Webhook Notification
      if: always()
      env:
        JOB_STATUS: ${{ job.status }}
        WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        HOOK_OS_NAME: ${{ runner.os }}
        WORKFLOW_NAME: ${{ github.workflow }}
      run: |
        git clone https://github.com/DiscordHooks/github-actions-discord-webhook.git webhook
        bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
      shell: bash
